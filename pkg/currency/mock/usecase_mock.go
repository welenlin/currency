// Code generated by MockGen. DO NOT EDIT.
// Source: C:/Users/Welen/go/src/currency/pkg/currency/usecase.go

// Package mock_currency is a generated GoMock package.
package mock_currency

import (
	context "context"
	api "currency/api"
	models "currency/models"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockExchangeUsecase is a mock of ExchangeUsecase interface
type MockExchangeUsecase struct {
	ctrl     *gomock.Controller
	recorder *MockExchangeUsecaseMockRecorder
}

// MockExchangeUsecaseMockRecorder is the mock recorder for MockExchangeUsecase
type MockExchangeUsecaseMockRecorder struct {
	mock *MockExchangeUsecase
}

// NewMockExchangeUsecase creates a new mock instance
func NewMockExchangeUsecase(ctrl *gomock.Controller) *MockExchangeUsecase {
	mock := &MockExchangeUsecase{ctrl: ctrl}
	mock.recorder = &MockExchangeUsecaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockExchangeUsecase) EXPECT() *MockExchangeUsecaseMockRecorder {
	return m.recorder
}

// GetExchangeRate mocks base method
func (m *MockExchangeUsecase) GetExchangeRate(ctx context.Context) (models.ExchangeRate, api.ApiError) {
	ret := m.ctrl.Call(m, "GetExchangeRate", ctx)
	ret0, _ := ret[0].(models.ExchangeRate)
	ret1, _ := ret[1].(api.ApiError)
	return ret0, ret1
}

// GetExchangeRate indicates an expected call of GetExchangeRate
func (mr *MockExchangeUsecaseMockRecorder) GetExchangeRate(ctx interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetExchangeRate", reflect.TypeOf((*MockExchangeUsecase)(nil).GetExchangeRate), ctx)
}

// GetCurrencyCodes mocks base method
func (m *MockExchangeUsecase) GetCurrencyCodes(ctx context.Context) (models.Currencies, api.ApiError) {
	ret := m.ctrl.Call(m, "GetCurrencyCodes", ctx)
	ret0, _ := ret[0].(models.Currencies)
	ret1, _ := ret[1].(api.ApiError)
	return ret0, ret1
}

// GetCurrencyCodes indicates an expected call of GetCurrencyCodes
func (mr *MockExchangeUsecaseMockRecorder) GetCurrencyCodes(ctx interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCurrencyCodes", reflect.TypeOf((*MockExchangeUsecase)(nil).GetCurrencyCodes), ctx)
}

// GetExchangeLists mocks base method
func (m *MockExchangeUsecase) GetExchangeLists(ctx context.Context) ([]models.ExchangeList, api.ApiError) {
	ret := m.ctrl.Call(m, "GetExchangeLists", ctx)
	ret0, _ := ret[0].([]models.ExchangeList)
	ret1, _ := ret[1].(api.ApiError)
	return ret0, ret1
}

// GetExchangeLists indicates an expected call of GetExchangeLists
func (mr *MockExchangeUsecaseMockRecorder) GetExchangeLists(ctx interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetExchangeLists", reflect.TypeOf((*MockExchangeUsecase)(nil).GetExchangeLists), ctx)
}

// StoreExchangeRate mocks base method
func (m *MockExchangeUsecase) StoreExchangeRate(ctx context.Context) (int64, api.ApiError) {
	ret := m.ctrl.Call(m, "StoreExchangeRate", ctx)
	ret0, _ := ret[0].(int64)
	ret1, _ := ret[1].(api.ApiError)
	return ret0, ret1
}

// StoreExchangeRate indicates an expected call of StoreExchangeRate
func (mr *MockExchangeUsecaseMockRecorder) StoreExchangeRate(ctx interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StoreExchangeRate", reflect.TypeOf((*MockExchangeUsecase)(nil).StoreExchangeRate), ctx)
}

// StoreExchangeList mocks base method
func (m *MockExchangeUsecase) StoreExchangeList(ctx context.Context) (int64, api.ApiError) {
	ret := m.ctrl.Call(m, "StoreExchangeList", ctx)
	ret0, _ := ret[0].(int64)
	ret1, _ := ret[1].(api.ApiError)
	return ret0, ret1
}

// StoreExchangeList indicates an expected call of StoreExchangeList
func (mr *MockExchangeUsecaseMockRecorder) StoreExchangeList(ctx interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StoreExchangeList", reflect.TypeOf((*MockExchangeUsecase)(nil).StoreExchangeList), ctx)
}

// DeleteExchangeList mocks base method
func (m *MockExchangeUsecase) DeleteExchangeList(ctx context.Context, id int64) (bool, api.ApiError) {
	ret := m.ctrl.Call(m, "DeleteExchangeList", ctx, id)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(api.ApiError)
	return ret0, ret1
}

// DeleteExchangeList indicates an expected call of DeleteExchangeList
func (mr *MockExchangeUsecaseMockRecorder) DeleteExchangeList(ctx, id interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteExchangeList", reflect.TypeOf((*MockExchangeUsecase)(nil).DeleteExchangeList), ctx, id)
}
